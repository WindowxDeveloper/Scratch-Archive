'From MIT Squeak 0.9.4 (June 1, 2003) [No updates present.] on 4 October 2020 at 10:34:49 am'!InputDialogBoxMorph subclass: #ScratchFileChooserDialog	instanceVariableNames: 'fileSelection list extensions newFileName dirList dirDisplay createButton extensionsField '	classVariableNames: ''	poolDictionaries: ''	category: 'Scratch-UI'!Model subclass: #ScratchFileChooserModel	instanceVariableNames: 'currentDir selectedIndex selectedDir fileExtensions finalSelection doubleClicked '	classVariableNames: ''	poolDictionaries: ''	category: 'Scratch-UI'!!ScratchFileChooserDialog methodsFor: 'initialization'!initialize	| t1 |	super initialize.	t1 _ ScratchFileChooserModel new.	extensions _ '*'.	list _ PluggableListMorphDoubleClick				on: t1				list: #itemList				selected: #selectedItem				changeSelected: #selectedItem:				menu: #itemListMenu:				keystroke: #itemListKeystroke:.	dirList _ PluggableListMorphDoubleClick				on: t1				list: #directoryList				selected: #selectedDir				changeSelected: #selectedDir:				menu: nil				keystroke: nil.	dirDisplay _ UpdatingStringMorph on: t1 selector: #dirName.	dirDisplay useStringFormat.	dirDisplay font: (TextStyle default fontAt: 2)		emphasis: 1.	fileSelection _ UpdatingStringMorph on: t1 selector: #selectedItemName.	fileSelection useStringFormat.	fileSelection font: (TextStyle default fontAt: 2)		emphasis: 1.	list retractable: false.	dirList retractable: false.	extensionsField _ UpdatingStringMorph new contents: extensions asString;			 target: self;			 getSelector: #getExtensions;			 putSelector: #propagateExtensions:;			 useStringFormat.	createButton _ SimpleButtonMorph new label: 'Create new file: ';			 target: self;			 actionSelector: #createNewFile;			 color: Color lightGray;			 borderColor: Color black.	newFileName _ UpdatingStringMorph new contents: ' <type new file name> ';			 target: self;			 getSelector: #getFilenameString;			 putSelector: #propagateFilenameString:;			 useStringFormat.	self		type: 1		withButtonsForYes: false		no: false		okay: true		cancel: true;	 message: ' '! !!ScratchFileChooserDialog methodsFor: 'interaction'!getUserResponse	| t1 |	self openInWorld.	t1 _ self world.	self position: t1 center - (self extent // 2).	self extent: self extent.	response _ #cancelled.	done _ false.	[done or: [list getModel isFinalSelection]]		whileFalse: [t1 doOneCycle].	self delete.	t1 doOneCycle.	(response = #cancelled and: [list getModel isFinalSelection not])		ifTrue: [^ #cancelled].	^ list getModel selectedItemName! !!ScratchFileChooserDialog methodsFor: 'geometry'!extent: t1 	| t2 t3 |	submorphs size = 0 ifTrue: [^ super extent: t1].	t2 _ 100 @ 100.	buttonRow ifNotNil: [t2 _ buttonRow minWidth @ buttonRow minHeight + (10 @ 60)].	super extent: (t1 max: t2).	t3 _ self firstSubmorph.	t3 extent: self extent - (10 @ 28).	list ifNotNil: [list extent: self extent - (20 @ 280)].	list		ifNotNil: 			[list width: self width - 20.			list height: self height + list height / 4].	dirList		ifNotNil: 			[dirList width: self width - 20.			dirList height: self height + dirList height / 5.2].	t3 submorphs do: [:t4 | (t4 isKindOf: UpdatingStringMorph)			ifTrue: [t4 extent: t3 width - (2 * t3 inset) @ 15]]! !!ScratchFileChooserDialog methodsFor: 'accessing'!createNewFile	| t1 t2 t3 t4 |	t3 _ newFileName contents.	(t3 = '' or: [t3 = ' <type new file name> '])		ifTrue: 			[t1 _ InputDialogBoxMorph askWithCancel: 'File name?' defaultResponse: '<New File?> '.			newFileName contents: t1]		ifFalse: [t1 _ t3].	t1 ifNil: [^ nil].	t4 _ list getModel currentDir.	t2 _ StandardFileStream newScratchFileNamed: (t4 fullNameFor: t1).	t2		ifNotNil: 			[t1 = t2 localName ifFalse: [t1 _ t2 localName].			newFileName contents: t1.			list getModel changed: #itemList.			list selection: t1.			list getModel changed: #selectedItem:.			list getModel changed: #selectedItemName].	^ t2! !!ScratchFileChooserDialog methodsFor: 'accessing'!getExtensions	^ extensions! !!ScratchFileChooserDialog methodsFor: 'accessing'!getFilenameString	^ newFileName contents! !!ScratchFileChooserDialog methodsFor: 'accessing'!propagateExtensions: t1 	| t2 |	t1 size = 0		ifTrue: 			[extensions _ nil.			list getModel extensions: nil]		ifFalse: 			[t2 _ t1 substrings.			extensions _ t1.			list getModel extensions: t2]! !!ScratchFileChooserDialog methodsFor: 'accessing'!propagateFilenameString: t1 	(t1 size = 0 or: [t1 isNil])		ifTrue: [^ nil]! !!ScratchFileChooserDialog class methodsFor: 'example'!example	| t1 |	t1 _ self new.	t1 extent: 400 @ 420.	t1 createFileChooserLayout: true.	^ t1 openInWorld getUserResponse! !!ScratchFileChooserModel methodsFor: 'initialization'!initialize	currentDir _ FileDirectory default.	selectedIndex _ 0.	selectedDir _ 0.	doubleClicked _ false.	finalSelection _ false! !!ScratchFileChooserModel methodsFor: 'file access'!doubleClicked: t1 	t1 = nil ifFalse: [doubleClicked _ t1]! !!ScratchFileChooserModel methodsFor: 'file access'!extensions	^ fileExtensions! !!ScratchFileChooserModel methodsFor: 'file access'!extensions: t1 	fileExtensions _ t1.	self changed: #itemList! !!ScratchFileChooserModel methodsFor: 'file access'!isFinalSelection	^ finalSelection! !!ScratchFileChooserModel methodsFor: 'file access'!itemList	| t1 t2 |	t2 _ (currentDir directoryNames collect: [:t3 | ' <dir> ' , t3 name])				, (currentDir fileNames						select: 							[:t4 | 							(fileExtensions isNil not and: [fileExtensions includes: '*'])								ifTrue: [fileExtensions _ nil].							fileExtensions ifNil: [true]								ifNotNil: 									[t1 _ (FileDirectory extensionFor: t4) asLowercase.									fileExtensions includes: t1]]).	^ t2! !!ScratchFileChooserModel methodsFor: 'file access'!selectedItem	^ selectedIndex! !!ScratchFileChooserModel methodsFor: 'file access'!selectedItem: t1 	t1 > currentDir entries size ifTrue: [selectedIndex _ 0].	t1 = 0 ifFalse: [selectedIndex _ t1].	doubleClicked		ifTrue: [selectedIndex <= currentDir directoryNames size				ifTrue: 					[currentDir _ currentDir directoryNamed: (currentDir directoryNames at: selectedIndex).					self changed: #selectedItem.					self changed: #itemList.					self changed: #directoryList.					selectedDir _ selectedDir + 1.					self changed: #selectedDir.					doubleClicked _ false.					finalSelection _ false]				ifFalse: 					[self changed: #selectedItem.					finalSelection _ true]]		ifFalse: [self changed: #selectedItem]! !!ScratchFileChooserModel methodsFor: 'file access'!selectedItemName	| t1 |	t1 _ self itemList.	((1 <= selectedIndex and: [selectedIndex > currentDir directoryNames size])		and: [selectedIndex <= t1 size])		ifFalse: [^ 'no file selected'].	^ currentDir fullPathFor: (t1 at: selectedIndex)! !!ScratchFileChooserModel methodsFor: 'directory access'!dirName	currentDir pathParts isEmpty ifFalse: [^ 'Folder: ' , currentDir pathParts last].	^ 'Folder: <root> '! !!ScratchFileChooserModel methodsFor: 'directory access'!directoryList	^ (Array with: '[]')		, currentDir pathParts withIndexCollect: [:t1 :t2 | (String new: t2 - 1 withAll: $ )			, t1]! !!ScratchFileChooserModel methodsFor: 'directory access'!selectedDir	^ selectedDir! !!ScratchFileChooserModel methodsFor: 'directory access'!selectedDir: t1 	| t2 t3 |	t1 = 0 ifFalse: [selectedDir _ t1].	t3 _ String new.	t2 _ self directoryList				withIndexCollect: [:t4 :t5 | t5 <= selectedDir ifTrue: [t4 withBlanksTrimmed]].	t2 allButFirst do: [:t4 | t4 ifNotNil: [t3 _ t3 , t4 withBlanksTrimmed asString , FileDirectory pathNameDelimiter asString]].	selectedIndex _ 0.	currentDir _ FileDirectory on: t3.	self changed: #selectedDir.	self changed: #directoryList.	self changed: #itemList! !Model subclass: #ScratchFileChooserModel	instanceVariableNames: 'currentDir selectedIndex selectedDir doubleClicked finalSelection fileExtensions '	classVariableNames: ''	poolDictionaries: ''	category: 'Scratch-UI'!InputDialogBoxMorph subclass: #ScratchFileChooserDialog	instanceVariableNames: 'extensions newFileName dirDisplay createButton dirList extensionsField fileSelection list '	classVariableNames: ''	poolDictionaries: ''	category: 'Scratch-UI'!!ScratchFileChooserDialog reorganize!('initialization' createFileChooserLayout: createFolderChooserLayout: initialize)('interaction' getUserResponse getUserResponseForFolder)('geometry' extent:)('accessing' createNewFile createNewFolder extensions: getExtensions getFilenameString propagateExtensions: propagateFilenameString: setDirectory:)!